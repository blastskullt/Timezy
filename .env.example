# ⚠️ IMPORTANTE: Este arquivo é apenas um exemplo!
# Copie para .env e configure com suas credenciais reais
# NUNCA commite o arquivo .env no Git!

# =============================================================================
# CONFIGURAÇÃO DO SUPABASE
# =============================================================================

# URL do seu projeto Supabase
# Exemplo: https://seu-projeto-id.supabase.co
VITE_SUPABASE_URL=your_supabase_project_url

# Chave pública anônima do Supabase
# ⚠️ ATENÇÃO: Esta chave é PÚBLICA e será exposta no frontend
# Use apenas para operações que não requerem autenticação
# Configure RLS (Row Level Security) para proteger dados sensíveis
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key

# =============================================================================
# CONFIGURAÇÕES DE AMBIENTE
# =============================================================================

# Ambiente da aplicação (development, staging, production)
VITE_APP_ENV=development

# =============================================================================
# INSTRUÇÕES DE DEPLOY NO NETLIFY
# =============================================================================

# 1. No painel do Netlify, configure:
#    Build command: npm ci && npm run build
#    Publish directory: dist
#    Node version: 20

# 2. Adicione as variáveis de ambiente no painel do Netlify:
#    VITE_SUPABASE_URL=https://seu-projeto.supabase.co
#    VITE_SUPABASE_ANON_KEY=sua_chave_publica
#    VITE_APP_ENV=production

# 3. O arquivo _redirects será automaticamente copiado para garantir
#    que o React Router funcione corretamente

# =============================================================================
# CONFIGURAÇÕES DE SEGURANÇA
# =============================================================================

# 1. NUNCA exponha a Service Role Key no frontend
# 2. Configure RLS em todas as tabelas do Supabase
# 3. Use Edge Functions para operações sensíveis
# 4. Valide dados no backend sempre
# 5. Monitore logs de acesso regularmente
# 6. Use HTTPS em produção sempre
# 7. Configure CSP (Content Security Policy)
# 8. Implemente rate limiting

# =============================================================================
# CREDENCIAIS DE TESTE (PARA DESENVOLVIMENTO)
# =============================================================================

# Usuários de teste para desenvolvimento:
# Admin: admin@clinic.com / admin123
# Prof 1: joao.silva@clinic.com / prof123
# Prof 2: maria.costa@clinic.com / prof123
# Prof 3: bruno.mattos142@gmail.com / 0425Lorenna@